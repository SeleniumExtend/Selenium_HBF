package util;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.StringTokenizer;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import javax.mail.MessagingException;
import javax.mail.internet.AddressException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

import datatable.Xls_Reader;



import testscript.DriverScript;
import testscript.Keywords;

public class TestUtil extends DriverScript{

	 public static String imageName;
	 public static String imageNameIP;
	 public static String imageError;
	 public static String subject;
	 public static String from_date=null;
	 public static String to_date=null;
	 public static Xls_Reader datareader=null;
	 public static String Handeler()   
		{
		try{	
		 InetAddress ownIP = null;
			ownIP = InetAddress.getLocalHost();
			subject=ownIP.getHostAddress(); 
			
		}catch(Throwable t){
		 t.printStackTrace();
		}
		return subject;
					
		}
	

	// returns current date and time
	public static String now(String dateFormat) {
	    Calendar cal = Calendar.getInstance();
	    SimpleDateFormat sdf = new SimpleDateFormat(dateFormat);
	    //System.out.println("this is the localhost ip"+Handeler());
	    //System.out.println("this is the localhost newip"+localhost_IP);
	//  System.out.println("Bhai ye hi hai apna IP"+TestConfig.attachmentName);
	  
	    return sdf.format(cal.getTime());
	    
	}
	
	// store screenshots
public static void captureScreenshot(String path){
		
		Calendar cal = new GregorianCalendar();
		  int month = cal.get(Calendar.MONTH);
		  int year = cal.get(Calendar.YEAR);
		  int sec =cal.get(Calendar.SECOND);
		  int min =cal.get(Calendar.MINUTE);
		  int date = cal.get(Calendar.DATE);
		  int day =cal.get(Calendar.HOUR_OF_DAY);
	     String ImageDest = "C:\\CMAutomation\\tomcat-6.0\\webapps\\ROOT\\screenshots\\";
		//  String ImageDest = "C:/CM Automation/tomcat-6.0/webapps/ROOT/screenshots/";
	      //change screenshot location
		 // String ImageDest = "C:\\Inetpub\\wwwroot\\screenshots\\";
		  imageName = ImageDest+DriverScript.currentTest+DriverScript.currentTSID+year+"_"+date+"_"+(month+1)+"_"+day+"_"+min+"_" +sec;
		  imageError = DriverScript.currentTest+DriverScript.currentTSID+year+"_"+date+"_"+(month+1)+"_"+day+"_"+min+"_" +sec;
		  imageNameIP=DriverScript.currentTest+DriverScript.currentTSID+year+"_"+date+"_"+(month+1)+"_"+day+"_"+min+"_" +sec;
		  // imageName = date+"_"+(month+1)+"_"+day+"_"+min+"_" +sec;
	      selenium.captureEntirePageScreenshot(imageName+ ".jpeg"," ");
	      
	     
	      	      
	}

public static void takeScreenShot() {
	Calendar cal = new GregorianCalendar();
	  int month = cal.get(Calendar.MONTH);
	  int year = cal.get(Calendar.YEAR);
	  int sec =cal.get(Calendar.SECOND);
	  int min =cal.get(Calendar.MINUTE);
	  int date = cal.get(Calendar.DATE);
	  int day =cal.get(Calendar.HOUR_OF_DAY);
	String ImageDest = "C:\\CMAutomation\\tomcat-6.0\\webapps\\ROOT\\screenshots\\";
	selenium.captureEntirePageScreenshot(ImageDest+year+"_"+date+"_"+(month+1)+"_"+day+"_"+min+"_" +sec+ ".jpeg"," ");
    try {
    	selenium.captureEntirePageScreenshot(ImageDest+year+"_"+date+"_"+(month+1)+"_"+day+"_"+min+"_" +sec+ ".jpeg"," ");
	} catch (Throwable t) {
		// TODO Auto-generated catch block
		t.printStackTrace();
	}	   
    
}





//GET data from TestData.xsls
public static Object[][] getData(String sheetName){
	// return test data;
	// read test data from xls
	
	int rows=DriverScript.testData.getRowCount(sheetName)-1;
	if(rows <=0){
		Object[][] testData =new Object[1][0];
		return testData;
		
	}
    rows = DriverScript.testData.getRowCount(sheetName);  // 3
	int cols = DriverScript.testData.getColumnCount(sheetName);
	//System.out.println("total rows -- "+ rows);
	//System.out.println("total cols -- "+cols);
	Object data[][] = new Object[rows-1][cols];
	
	for( int rowNum = 2 ; rowNum <= rows ; rowNum++){
		
		for(int colNum=0 ; colNum< cols; colNum++){
			data[rowNum-2][colNum]=DriverScript.testData.getCellData(sheetName, colNum, rowNum);
		}
	}
	
	return data;
	
	
}


	
	// make zip of reports
	public static void zip(String filepath){
	 	try
	 	{
	 		File inFolder=new File(filepath);
	 		File outFolder=new File("Reports.zip");
	 		ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(outFolder)));
	 		BufferedInputStream in = null;
	 		byte[] data  = new byte[1000];
	 		String files[] = inFolder.list();
	 		for (int i=0; i<files.length; i++)
	 		{
	 			in = new BufferedInputStream(new FileInputStream
	 			(inFolder.getPath() + "/" + files[i]), 1000);  
	 			out.putNextEntry(new ZipEntry(files[i])); 
	 			int count;
	 			while((count = in.read(data,0,1000)) != -1)
	 			{
	 				out.write(data, 0, count);
	 			}
	 			out.closeEntry();
  }
  out.flush();
  out.close();
	 	
}
  catch(Exception e)
  {
	  e.printStackTrace();
  } 
 }	
	

		   
     public static float Round(float Rval, int Rpl) {
		  float p = (float)Math.pow(10,Rpl);
		  Rval = Rval * p;
		  float tmp = Math.round(Rval);
		  return (float)tmp/p;
		  }

     public static void Report_Date_Conversion(){
    	 
    	String from_mm=Keywords.Report_calldate.substring(0, 2);
 		String from_dd=Keywords.Report_calldate.substring(3, 5);
 		String from_yyyy=Keywords.Report_calldate.substring(6, 10);
 		String to_mm=Keywords.Report_calldate.substring(14, 16);
 		String to_dd=Keywords.Report_calldate.substring(17,19);
 		String to_yyyy=Keywords.Report_calldate.substring(20,24);
 		from_date=from_yyyy+"-"+from_mm+"-"+from_dd;
 		to_date=to_yyyy+"-"+to_mm+"-"+to_dd;
 		System.out.println("Report from date"+TestUtil.from_date);
		  System.out.println("Report to date"+TestUtil.to_date);
     }
     
     
     public static void controller_y(){
    	 
    	 DriverScript.controller=null; 
		 datareader = new Xls_Reader("C:\\CM3.0\\app\\test\\Framework\\AutomationBvt_Hybrid\\src\\config\\Controller.xlsx");
		 datareader.setCellData("Suite1", "Runmode", 2, "Y");
		 datareader.setCellData("Suite1", "Runmode", 3, "Y");
		 datareader.setCellData("Suite1", "Runmode", 4, "Y");
		 datareader.setCellData("Suite1", "Runmode", 5, "Y");
		 datareader.setCellData("Suite1", "Runmode", 6, "Y");
		 datareader.setCellData("Suite1", "Runmode", 7, "Y");
		 datareader.setCellData("Suite1", "Runmode", 8, "Y");
		 datareader.setCellData("Suite1", "Runmode", 9, "Y");
		 datareader.setCellData("Suite1", "Runmode", 10, "Y");
		 datareader.setCellData("Suite1", "Runmode", 11, "Y");
		 datareader.setCellData("Suite1", "Runmode", 12, "Y");
		 datareader.setCellData("Suite1", "Runmode", 13, "Y");
		 datareader.setCellData("Suite1", "Runmode", 14, "Y");
		 datareader.setCellData("Suite1", "Runmode", 15, "Y");
		 datareader.setCellData("Suite1", "Runmode", 16, "Y");
     }
     
     
public static void controller_n(){
    	 
    	 DriverScript.controller=null; 
		 datareader = new Xls_Reader("C:\\CM3.0\\app\\test\\Framework\\AutomationBvt_Hybrid\\src\\config\\Controller.xlsx");
		 datareader.setCellData("Suite1", "Runmode", 2, "N");
		 datareader.setCellData("Suite1", "Runmode", 3, "N");
		 datareader.setCellData("Suite1", "Runmode", 4, "N");
		 datareader.setCellData("Suite1", "Runmode", 5, "N");
		 datareader.setCellData("Suite1", "Runmode", 6, "N");
		 datareader.setCellData("Suite1", "Runmode", 7, "N");
		 datareader.setCellData("Suite1", "Runmode", 8, "N");
		 datareader.setCellData("Suite1", "Runmode", 9, "N");
		 datareader.setCellData("Suite1", "Runmode", 10, "N");
		 datareader.setCellData("Suite1", "Runmode", 11, "N");
		 datareader.setCellData("Suite1", "Runmode", 12, "N");
		 datareader.setCellData("Suite1", "Runmode", 13, "N");
		 datareader.setCellData("Suite1", "Runmode", 14, "N");
		 datareader.setCellData("Suite1", "Runmode", 15, "N");
		 datareader.setCellData("Suite1", "Runmode", 16, "N");
		// DriverScript.controller=null;
     }
     
     
}
